=== tests/cases/conformance/jsx/tsxElementResolution12.tsx ===
declare module JSX {
>JSX : Symbol(JSX, Decl(tsxElementResolution12.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(tsxElementResolution12.tsx, 0, 20))

	interface ElementAttributesProperty { pr: any; }
>ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(tsxElementResolution12.tsx, 1, 22))
>pr : Symbol(pr, Decl(tsxElementResolution12.tsx, 2, 38))

	interface IntrinsicElements { }
>IntrinsicElements : Symbol(IntrinsicElements, Decl(tsxElementResolution12.tsx, 2, 49))
}

interface Obj1 {
>Obj1 : Symbol(Obj1, Decl(tsxElementResolution12.tsx, 4, 1))

	new(n: string): any;
>n : Symbol(n, Decl(tsxElementResolution12.tsx, 7, 5))
}
var obj1: Obj1;
>obj1 : Symbol(obj1, Decl(tsxElementResolution12.tsx, 9, 3))
>Obj1 : Symbol(Obj1, Decl(tsxElementResolution12.tsx, 4, 1))

<obj1 x={10} />; // OK
>obj1 : Symbol(unknown)
>x : Symbol(unknown)

interface Obj2 {
>Obj2 : Symbol(Obj2, Decl(tsxElementResolution12.tsx, 10, 16))

	new(n: string): { q?: number; pr: any };
>n : Symbol(n, Decl(tsxElementResolution12.tsx, 13, 5))
>q : Symbol(q, Decl(tsxElementResolution12.tsx, 13, 18))
>pr : Symbol(pr, Decl(tsxElementResolution12.tsx, 13, 30))
}
var obj2: Obj2;
>obj2 : Symbol(obj2, Decl(tsxElementResolution12.tsx, 15, 3))
>Obj2 : Symbol(Obj2, Decl(tsxElementResolution12.tsx, 10, 16))

<obj2 x={10} />; // OK
>obj2 : Symbol(unknown)
>x : Symbol(unknown)

interface Obj3 {
>Obj3 : Symbol(Obj3, Decl(tsxElementResolution12.tsx, 16, 16))

	new(n: string): { x: number; };
>n : Symbol(n, Decl(tsxElementResolution12.tsx, 19, 5))
>x : Symbol(x, Decl(tsxElementResolution12.tsx, 19, 18))
}
var obj3: Obj3;
>obj3 : Symbol(obj3, Decl(tsxElementResolution12.tsx, 21, 3))
>Obj3 : Symbol(Obj3, Decl(tsxElementResolution12.tsx, 16, 16))

<obj3 x={10} />; // Error
>obj3 : Symbol(unknown)
>x : Symbol(unknown)

interface Obj4 {
>Obj4 : Symbol(Obj4, Decl(tsxElementResolution12.tsx, 22, 16))

	new(n: string): { x: number; pr: { x: number; } };
>n : Symbol(n, Decl(tsxElementResolution12.tsx, 25, 5))
>x : Symbol(x, Decl(tsxElementResolution12.tsx, 25, 18))
>pr : Symbol(pr, Decl(tsxElementResolution12.tsx, 25, 29))
>x : Symbol(x, Decl(tsxElementResolution12.tsx, 25, 35))
}
var obj4: Obj4;
>obj4 : Symbol(obj4, Decl(tsxElementResolution12.tsx, 27, 3))
>Obj4 : Symbol(Obj4, Decl(tsxElementResolution12.tsx, 22, 16))

<obj4 x={10} />; // OK
>obj4 : Symbol(unknown)
>x : Symbol(unknown)

<obj4 x={'10'} />; // Error
>obj4 : Symbol(unknown)
>x : Symbol(unknown)

