genericCallWithGenericSignatureArguments3.ts(11,37): error TS2345: Argument of type '(x: Object) => string' is not assignable to parameter of type '(x: string) => string'.
  Types of parameters 'x' and 'x' are incompatible.
    Type 'string' is not assignable to type 'Object'.
genericCallWithGenericSignatureArguments3.ts(12,20): error TS2345: Argument of type '(x: Object) => string' is not assignable to parameter of type '(x: Object) => Object'.
  Type 'string' is not assignable to type 'Object'.
genericCallWithGenericSignatureArguments3.ts(14,35): error TS2322: Type 'string' is not assignable to type 'Object'.
genericCallWithGenericSignatureArguments3.ts(29,41): error TS2345: Argument of type '(x: string) => string' is not assignable to parameter of type '(x: Object) => string'.
  Types of parameters 'x' and 'x' are incompatible.
    Type 'Object' is not assignable to type 'string'.
genericCallWithGenericSignatureArguments3.ts(32,19): error TS2345: Argument of type '(a1: (y: string) => string) => (n: Object) => 1' is not assignable to parameter of type '(x: (a: string) => boolean) => (n: Object) => 1'.
  Types of parameters 'a1' and 'x' are incompatible.
    Type '(a: string) => boolean' is not assignable to type '(y: string) => string'.
      Type 'boolean' is not assignable to type 'string'.
genericCallWithGenericSignatureArguments3.ts(33,69): error TS2345: Argument of type '(a2: (z: string) => boolean) => number' is not assignable to parameter of type '(x: (z: string) => boolean) => (n: Object) => 1'.
  Type 'number' is not assignable to type '(n: Object) => 1'.


==== genericCallWithGenericSignatureArguments3.ts (6 errors) ====
    // When a function expression is inferentially typed (section 4.9.3) and a type assigned to a parameter in that expression references type parameters for which inferences are being made, 
    // the corresponding inferred type arguments to become fixed and no further candidate inferences are made for them.
    
    function foo<T>(x: T, a: (x: T) => T, b: (x: T) => T) {
        var r: (x: T) => T;
        return r;
    }
    
    var r1 = foo('', (x: string) => '', (x: Object) => null); // any => any
    var r1ii = foo('', (x) => '', (x) => null); // string => string
    var r2 = foo('', (x: string) => '', (x: Object) => ''); // string => string
                                        ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: Object) => string' is not assignable to parameter of type '(x: string) => string'.
!!! error TS2345:   Types of parameters 'x' and 'x' are incompatible.
!!! error TS2345:     Type 'string' is not assignable to type 'Object'.
    var r3 = foo(null, (x: Object) => '', (x: string) => ''); // Object => Object
                       ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: Object) => string' is not assignable to parameter of type '(x: Object) => Object'.
!!! error TS2345:   Type 'string' is not assignable to type 'Object'.
    var r4 = foo(null, (x) => '', (x) => ''); // any => any
    var r5 = foo(new Object(), (x) => '', (x) => ''); // Object => Object
                                      ~~
!!! error TS2322: Type 'string' is not assignable to type 'Object'.
!!! related TS6502 genericCallWithGenericSignatureArguments3.ts:4:26: The expected type comes from the return type of this signature.
!!! related TS1356 genericCallWithGenericSignatureArguments3.ts:14:28: Did you mean to mark this function as 'async'?
    
    enum E { A }
    enum F { A }
    
    var r6 = foo(E.A, (x: number) => E.A, (x: F) => F.A); // number => number 
    
    
    function foo2<T, U>(x: T, a: (x: T) => U, b: (x: T) => U) {
        var r: (x: T) => U;
        return r;
    }
    
    var r8 = foo2('', (x) => '', (x) => null); // string => string
    var r9 = foo2(null, (x) => '', (x) => ''); // any => any
    var r10 = foo2(null, (x: Object) => '', (x: string) => ''); // Object => Object
                                            ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: string) => string' is not assignable to parameter of type '(x: Object) => string'.
!!! error TS2345:   Types of parameters 'x' and 'x' are incompatible.
!!! error TS2345:     Type 'Object' is not assignable to type 'string'.
    
    var x: (a: string) => boolean;
    var r11 = foo2(x, (a1: (y: string) => string) => (n: Object) => 1, (a2: (z: string) => string) => 2); // error
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(a1: (y: string) => string) => (n: Object) => 1' is not assignable to parameter of type '(x: (a: string) => boolean) => (n: Object) => 1'.
!!! error TS2345:   Types of parameters 'a1' and 'x' are incompatible.
!!! error TS2345:     Type '(a: string) => boolean' is not assignable to type '(y: string) => string'.
!!! error TS2345:       Type 'boolean' is not assignable to type 'string'.
    var r12 = foo2(x, (a1: (y: string) => boolean) => (n: Object) => 1, (a2: (z: string) => boolean) => 2); // error
                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(a2: (z: string) => boolean) => number' is not assignable to parameter of type '(x: (z: string) => boolean) => (n: Object) => 1'.
!!! error TS2345:   Type 'number' is not assignable to type '(n: Object) => 1'.