tests/cases/compiler/flatArrayNoExcessiveStackDepth.ts(15,14): error TS2321: Excessive stack depth comparing types 'FlatArray<Arr, ?>' and 'FlatArray<Arr, ?>'.
tests/cases/compiler/flatArrayNoExcessiveStackDepth.ts(19,5): error TS2322: Type 'FlatArray<Arr, D>' is not assignable to type 'FlatArray<Arr, any>'.
  Type 'Arr extends readonly (infer InnerArr)[] ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]> : Arr' is not assignable to type 'FlatArray<Arr, any>'.
    Type 'Arr | FlatArray<unknown, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]>' is not assignable to type 'FlatArray<Arr, any>'.
      Type 'FlatArray<unknown, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]>' is not assignable to type 'FlatArray<Arr, any>'.
tests/cases/compiler/flatArrayNoExcessiveStackDepth.ts(19,5): error TS2321: Excessive stack depth comparing types 'FlatArray<Arr, D>' and 'FlatArray<Arr, any>'.
tests/cases/compiler/flatArrayNoExcessiveStackDepth.ts(20,5): error TS2322: Type 'FlatArray<Arr, any>' is not assignable to type 'FlatArray<Arr, D>'.
  Type 'Arr' is not assignable to type 'FlatArray<Arr, D>'.
    Type 'Arr' is not assignable to type 'Arr extends readonly (infer InnerArr)[] ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]> : Arr'.


==== tests/cases/compiler/flatArrayNoExcessiveStackDepth.ts (4 errors) ====
    // Repro from #43493
    
    declare const foo: unknown[];
    const bar = foo.flatMap(bar => bar as Foo);
    
    interface Foo extends Array<string> {}
    
    // Repros from comments in #43249
    
    const repro_43249 = (value: unknown) => {
        if (typeof value !== "string") {
            throw new Error("No");
        }
        const match = value.match(/anything/) || [];
        const [, extracted] = match;
                 ~~~~~~~~~
!!! error TS2321: Excessive stack depth comparing types 'FlatArray<Arr, ?>' and 'FlatArray<Arr, ?>'.
    };
    
    function f<Arr, D extends number>(x: FlatArray<Arr, any>, y: FlatArray<Arr, D>) {
        x = y;
        ~
!!! error TS2322: Type 'FlatArray<Arr, D>' is not assignable to type 'FlatArray<Arr, any>'.
!!! error TS2322:   Type 'Arr extends readonly (infer InnerArr)[] ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]> : Arr' is not assignable to type 'FlatArray<Arr, any>'.
!!! error TS2322:     Type 'Arr | FlatArray<unknown, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]>' is not assignable to type 'FlatArray<Arr, any>'.
!!! error TS2322:       Type 'FlatArray<unknown, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]>' is not assignable to type 'FlatArray<Arr, any>'.
        ~~~~~
!!! error TS2321: Excessive stack depth comparing types 'FlatArray<Arr, D>' and 'FlatArray<Arr, any>'.
        y = x;  // Error
        ~
!!! error TS2322: Type 'FlatArray<Arr, any>' is not assignable to type 'FlatArray<Arr, D>'.
!!! error TS2322:   Type 'Arr' is not assignable to type 'FlatArray<Arr, D>'.
!!! error TS2322:     Type 'Arr' is not assignable to type 'Arr extends readonly (infer InnerArr)[] ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][D]> : Arr'.
    }
    