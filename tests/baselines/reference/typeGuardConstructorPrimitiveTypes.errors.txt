typeGuardConstructorPrimitiveTypes.ts(3,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.
typeGuardConstructorPrimitiveTypes.ts(6,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.
typeGuardConstructorPrimitiveTypes.ts(9,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.
typeGuardConstructorPrimitiveTypes.ts(12,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.
typeGuardConstructorPrimitiveTypes.ts(15,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.
typeGuardConstructorPrimitiveTypes.ts(18,10): error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
  Property 'constructor' does not exist on type 'string'.


==== typeGuardConstructorPrimitiveTypes.ts (6 errors) ====
    // Narrow a union of primitive types
    let var1: string | number | boolean | any[] | symbol | bigint;
    if (var1.constructor === String) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // string
    }
    if (var1.constructor === Number) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // number
    }
    if (var1.constructor === Boolean) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // boolean
    }
    if (var1.constructor === Array) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // any[]
    }
    if (var1.constructor === Symbol) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // symbol
    }
    if (var1.constructor === BigInt) {
             ~~~~~~~~~~~
!!! error TS2339: Property 'constructor' does not exist on type 'string | number | bigint | boolean | symbol | any[]'.
!!! error TS2339:   Property 'constructor' does not exist on type 'string'.
        var1; // bigint
    }
    
    // Narrow a union of primitive object types
    let var2: String | Number | Boolean | Symbol | BigInt;
    if (var2.constructor === String) {
        var2; // String
    }
    if (var2.constructor === Number) {
        var2; // Number
    }
    if (var2.constructor === Boolean) {
        var2; // Boolean
    }
    if (var2.constructor === Symbol) {
        var2; // Symbol
    }
    if (var2.constructor === BigInt) {
        var2; // BigInt
    }
    