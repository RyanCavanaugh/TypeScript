tests/cases/compiler/invariantGenericErrorElaboration.ts(3,7): error TS2321: Excessive stack depth comparing types 'Num' and 'Runtype<any>'.
tests/cases/compiler/invariantGenericErrorElaboration.ts(4,19): error TS2322: Type 'Num' is not assignable to type 'Runtype<any>'.


==== tests/cases/compiler/invariantGenericErrorElaboration.ts (2 errors) ====
    // Repro from #19746
    
    const wat: Runtype<any> = Num;
          ~~~
!!! error TS2321: Excessive stack depth comparing types 'Num' and 'Runtype<any>'.
    const Foo = Obj({ foo: Num })
                      ~~~
!!! error TS2322: Type 'Num' is not assignable to type 'Runtype<any>'.
!!! related TS6501 tests/cases/compiler/invariantGenericErrorElaboration.ts:17:34: The expected type comes from this index signature.
    
    interface Runtype<A> {
      constraint: Constraint<this>
      witness: A
    }
    
    interface Num extends Runtype<number> {
      tag: 'number'
    }
    declare const Num: Num
    
    interface Obj<O extends { [_ in string]: Runtype<any> }> extends Runtype<{[K in keyof O]: O[K]['witness'] }> {}
    declare function Obj<O extends { [_: string]: Runtype<any> }>(fields: O): Obj<O>;
    
    interface Constraint<A extends Runtype<any>> extends Runtype<A['witness']> {
      underlying: A,
      check: (x: A['witness']) => void,
    }
    