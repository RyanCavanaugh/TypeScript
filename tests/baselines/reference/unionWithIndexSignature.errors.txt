unionWithIndexSignature.ts(23,20): error TS2345: Argument of type 'number | TypedArray' is not assignable to parameter of type '{}'.
  Type 'number' is not assignable to type '{}'.


==== unionWithIndexSignature.ts (1 errors) ====
    interface NumList {
      kind: 'n';
      [x: number]: number;
    }
    interface StrList {
      kind: 's';
      [x: number]: string;
    }
    
    export function foo<T extends NumList | StrList>(arr: T & (NumList | StrList)) {
      let zz = arr[1];  // Error
    }
    
    // Repro from #38102
    
    export type TypedArray = Int32Array | Uint8Array;
    
    export function isTypedArray(a: {}): a is Int32Array | Uint8Array {
      return a instanceof Int32Array || a instanceof Uint8Array;
    }
    
    export function flatten<T extends number|TypedArray>(arr: T) {
      if (isTypedArray(arr)) {
                       ~~~
!!! error TS2345: Argument of type 'number | TypedArray' is not assignable to parameter of type '{}'.
!!! error TS2345:   Type 'number' is not assignable to type '{}'.
          arr[1];
      }
    }
    